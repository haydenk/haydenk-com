name: Build and Deploy Jekyll

on:
  push:
    branches: [ master ]

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Setup Ruby
        uses: actions/setup-ruby@v1
        with:
          ruby-version: 2.7

      - name: Install dependencies
        run: bundle install

      - name: Build Jekyll Site
        env:
          JEKYLL_ENV: production
        run: bundle exec jekyll build --config _config.yml,_config_deploy.yml

      - name: Test Jekyll Site
        run: bundle exec htmlproofer ./_site --disable-external

      - name: Upload Jekyll Build Artifact
        uses: actions/upload-artifact@v2
        with:
          name: _site
          path: ./_site

      - name: Upload Cloudformation Template Artifact
        uses: actions/upload-artifact@v2
        with:
          name: cfn
          path: ./cfn

  deploy:
    name: Deploy
    needs: build
    runs-on: ubuntu-latest
    env:
      PRIMARY_DOMAIN: www.haydenk.com
      SECONDARY_DOMAIN: haydenk.com

    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Deploy Cloudformation Stack
        id: haydenk-com-stack
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: haydenk-com-stack
          template: cfn/website-stack.yml
          no-fail-on-empty-changeset: "1"
          parameter-overrides: >-
            WebsiteS3Bucket=${{ secrets.WEBSITE_BUCKET_NAME }},
            HostedZone=${{ secrets.HOSTED_ZONE_ID }},
            CertificateId=${{ secrets.ACM_CERTIFICATE_ID }},
            PrimaryDomain=${{ env.PRIMARY_DOMAIN }},
            SecondaryDomain=${{ env.SECONDARY_DOMAIN }}

      - name: Deploy Site to S3
        env:
          WEBSITE_BUCKET_NAME: ${{ secrets.WEBSITE_BUCKET_NAME }}
        run: |
          aws s3 sync --delete --cache-control max-age=3600 _site s3://${WEBSITE_BUCKET_NAME} && \
          echo $PRIMARY_DOMAIN && \
          aws cloudfront list-distributions --output json | jq -r --arg PRIMARY_DOMAIN "${PRIMARY_DOMAIN}" '.DistributionList.Items[] | select(.Aliases.Items[] | contains($PRIMARY_DOMAIN)') && \
          DISTRIBUTION_ID=$(aws cloudfront list-distributions --output json | jq -r --arg PRIMARY_DOMAIN "${PRIMARY_DOMAIN}" '.DistributionList.Items[] | select(.Aliases.Items[] | contains($PRIMARY_DOMAIN)) | .Id') && \
          aws cloudfront create-invalidation --distribution-id $DISTRIBUTION_ID --paths "/"